apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: atmosphere-operator
    app.kubernetes.io/instance: system
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespace
    app.kubernetes.io/part-of: atmosphere-operator
    control-plane: controller-manager
  name: atmosphere-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: barbicans.openstack.atmosphere.vexxhost.com
spec:
  group: openstack.atmosphere.vexxhost.com
  names:
    kind: Barbican
    listKind: BarbicanList
    plural: barbicans
    singular: barbican
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Barbican is the Schema for the barbicans API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BarbicanSpec defines the desired state of Barbican
            properties:
              databaseRef:
                properties:
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - name
                type: object
              imageRepository:
                type: string
              ingress:
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    type: object
                  className:
                    type: string
                  host:
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    type: object
                  tls:
                    description: IngressTLS describes the transport layer security associated with an Ingress.
                    properties:
                      hosts:
                        description: Hosts are a list of hosts included in the TLS certificate. The values in this list must match the name/s used in the tlsSecret. Defaults to the wildcard host setting for the loadbalancer controller fulfilling this Ingress, if left unspecified.
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: atomic
                      secretName:
                        description: SecretName is the name of the secret used to terminate TLS traffic on port 443. Field is left optional to allow TLS routing based on SNI hostname alone. If the SNI host in a listener conflicts with the "Host" header field used by an IngressRule, the SNI host is used for termination and value of the Host header is used for routing.
                        type: string
                    type: object
                required:
                - className
                - host
                type: object
              keystoneRef:
                properties:
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - name
                type: object
              overrides:
                additionalProperties:
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                type: object
              rabbitmqRef:
                properties:
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - name
                type: object
              regionName:
                type: string
              replicas:
                default: 1
                format: int32
                type: integer
              secretsRef:
                properties:
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - name
                type: object
            required:
            - databaseRef
            - ingress
            - keystoneRef
            - rabbitmqRef
            - regionName
            - replicas
            - secretsRef
            type: object
          status:
            description: BarbicanStatus defines the observed state of Barbican
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: keystones.openstack.atmosphere.vexxhost.com
spec:
  group: openstack.atmosphere.vexxhost.com
  names:
    kind: Keystone
    listKind: KeystoneList
    plural: keystones
    singular: keystone
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Keystone is the Schema for the keystones API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KeystoneSpec defines the desired state of Keystone
            properties:
              databaseRef:
                properties:
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - name
                type: object
              imageRepository:
                type: string
              ingress:
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    type: object
                  className:
                    type: string
                  host:
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    type: object
                  tls:
                    description: IngressTLS describes the transport layer security associated with an Ingress.
                    properties:
                      hosts:
                        description: Hosts are a list of hosts included in the TLS certificate. The values in this list must match the name/s used in the tlsSecret. Defaults to the wildcard host setting for the loadbalancer controller fulfilling this Ingress, if left unspecified.
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: atomic
                      secretName:
                        description: SecretName is the name of the secret used to terminate TLS traffic on port 443. Field is left optional to allow TLS routing based on SNI hostname alone. If the SNI host in a listener conflicts with the "Host" header field used by an IngressRule, the SNI host is used for termination and value of the Host header is used for routing.
                        type: string
                    type: object
                required:
                - className
                - host
                type: object
              overrides:
                additionalProperties:
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                type: object
              rabbitmqRef:
                properties:
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - name
                type: object
              regionName:
                type: string
              replicas:
                default: 1
                format: int32
                type: integer
              secretsRef:
                properties:
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - name
                type: object
            required:
            - databaseRef
            - ingress
            - rabbitmqRef
            - regionName
            - replicas
            - secretsRef
            type: object
          status:
            description: KeystoneStatus defines the observed state of Keystone
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: memcacheds.infra.atmosphere.vexxhost.com
spec:
  group: infra.atmosphere.vexxhost.com
  names:
    kind: Memcached
    listKind: MemcachedList
    plural: memcacheds
    singular: memcached
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Memcached is the Schema for the memcacheds API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MemcachedSpec defines the desired state of Memcached
            properties:
              imageRepository:
                type: string
            type: object
          status:
            description: MemcachedStatus defines the observed state of Memcached
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: rabbitmqclusters.infra.atmosphere.vexxhost.com
spec:
  group: infra.atmosphere.vexxhost.com
  names:
    kind: RabbitmqCluster
    listKind: RabbitmqClusterList
    plural: rabbitmqclusters
    singular: rabbitmqcluster
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RabbitmqCluster is the Schema for the rabbitmqclusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RabbitmqClusterSpec defines the desired state of RabbitmqCluster
            properties:
              imageRepository:
                type: string
            type: object
          status:
            description: RabbitmqClusterStatus defines the observed state of RabbitmqCluster
            properties:
              defaultUser:
                description: Contains references to resources created with the RabbitmqCluster resource.
                properties:
                  secretReference:
                    description: Reference to the Kubernetes Secret containing the credentials of the default user.
                    properties:
                      keys:
                        additionalProperties:
                          type: string
                        description: Key-value pairs in the Secret corresponding to `username`, `password`, `host`, and `port`
                        type: object
                      name:
                        description: Name of the Secret containing the default user credentials
                        type: string
                      namespace:
                        description: Namespace of the Secret containing the default user credentials
                        type: string
                    required:
                    - keys
                    - name
                    - namespace
                    type: object
                  serviceReference:
                    description: Reference to the Kubernetes Service serving the cluster.
                    properties:
                      name:
                        description: Name of the Service serving the cluster
                        type: string
                      namespace:
                        description: Namespace of the Service serving the cluster
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: atmosphere-operator
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: atmosphere-operator
  name: atmosphere-controller-manager
  namespace: atmosphere-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: atmosphere-operator
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: atmosphere-operator
  name: atmosphere-leader-election-role
  namespace: atmosphere-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: atmosphere-manager-role
rules:
- apiGroups:
  - apps
  - batch
  - ""
  - extensions
  resources:
  - configmaps
  - endpoints
  - events
  - namespaces
  - persistentvolumeclaims
  - pods
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  - batch
  - ""
  - extensions
  resources:
  - cronjobs
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  - batch
  - ""
  - extensions
  resources:
  - daemonsets
  - deployments
  - endpoints
  - replicasets
  - services
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - delete
  - get
  - update
- apiGroups:
  - infra.atmosphere.vexxhost.com
  resources:
  - memcacheds
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infra.atmosphere.vexxhost.com
  resources:
  - memcacheds/finalizers
  verbs:
  - update
- apiGroups:
  - infra.atmosphere.vexxhost.com
  resources:
  - memcacheds/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infra.atmosphere.vexxhost.com
  resources:
  - rabbitmqclusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infra.atmosphere.vexxhost.com
  resources:
  - rabbitmqclusters/finalizers
  verbs:
  - update
- apiGroups:
  - infra.atmosphere.vexxhost.com
  resources:
  - rabbitmqclusters/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - prometheusrules
  verbs:
  - create
  - get
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs:
  - create
  - get
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  - networkpolicies
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - openstack.atmosphere.vexxhost.com
  resources:
  - barbicans
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - openstack.atmosphere.vexxhost.com
  resources:
  - barbicans/finalizers
  verbs:
  - update
- apiGroups:
  - openstack.atmosphere.vexxhost.com
  resources:
  - barbicans/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - openstack.atmosphere.vexxhost.com
  resources:
  - keystones
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - openstack.atmosphere.vexxhost.com
  resources:
  - keystones/finalizers
  verbs:
  - update
- apiGroups:
  - openstack.atmosphere.vexxhost.com
  resources:
  - keystones/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - pxc.percona.com
  resources:
  - perconaxtradbclusters
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - rabbitmq.com
  resources:
  - rabbitmqclusters
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: atmosphere-operator
    app.kubernetes.io/instance: metrics-reader
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: atmosphere-operator
  name: atmosphere-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: atmosphere-operator
    app.kubernetes.io/instance: proxy-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: atmosphere-operator
  name: atmosphere-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: atmosphere-operator
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: atmosphere-operator
  name: atmosphere-leader-election-rolebinding
  namespace: atmosphere-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: atmosphere-leader-election-role
subjects:
- kind: ServiceAccount
  name: atmosphere-controller-manager
  namespace: atmosphere-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: atmosphere-operator
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: atmosphere-operator
  name: atmosphere-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: atmosphere-manager-role
subjects:
- kind: ServiceAccount
  name: atmosphere-controller-manager
  namespace: atmosphere-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: atmosphere-operator
    app.kubernetes.io/instance: proxy-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: atmosphere-operator
  name: atmosphere-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: atmosphere-proxy-role
subjects:
- kind: ServiceAccount
  name: atmosphere-controller-manager
  namespace: atmosphere-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: atmosphere-operator
    app.kubernetes.io/instance: controller-manager-metrics-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: atmosphere-operator
    control-plane: controller-manager
  name: atmosphere-controller-manager-metrics-service
  namespace: atmosphere-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: atmosphere-operator
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: atmosphere-operator
    control-plane: controller-manager
  name: atmosphere-controller-manager
  namespace: atmosphere-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
                - ppc64le
                - s390x
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: quay.io/vexxhost/atmosphere:main
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: atmosphere-controller-manager
      terminationGracePeriodSeconds: 10
